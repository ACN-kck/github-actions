name: build

on:
  push:
    paths-ignore:
      - 'docs/**'
  pull_request:
    types:
      - opened
      - reopened
      - synchronize
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Checkout Code.
      - name: Checkout code
        uses: actions/checkout@v3
        
      # Setup Terraform
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: "1.0.9" # Specify your desired Terraform version here
          
      # Caching Terraform Plugins
      - name: Cache Terraform plugins
        uses: actions/cache@v2
        with:
          path: ~/.terraform.d/plugin-cache
          key: ${{ runner.os }}-terraform-${{ hashFiles('**/.terraform.lock.hcl') }}
          restore-keys: |
            ${{ runner.os }}-terraform-
            ${{ runner.os }}-
            
      # Initialize Terraform
      - name: Initialize Terraform
        run: terraform init 

      # Validation of terraform code
      - name: Validate Terraform code
        run: terraform validate
        continue-on-error: false
        
      # Planning Terraform changes
      - name: Plan Terraform changes
        run: terraform plan -input=false -lock=false

      # Cache tfsec and checkov dependencies
      - name: Cache tfsec and checkov dependencies
        uses: actions/cache@v2
        with:
          path: ~/.tfsec
          key: ${{ runner.os }}-tfsec-${{ hashFiles('**/.tfsec-version') }}
      - run: tfsec --version # Install if not already cached

      - name: Cache checkov dependencies
        uses: actions/cache@v2
        with:
          path: ~/.checkov
          key: ${{ runner.os }}-checkov-${{ hashFiles('**/.checkov-version') }}
      - run: checkov --version # Install if not already cached

      # Install tfsec and checkov
      - name: Install tfsec and checkov
        run: |
          if ! command -v tfsec &> /dev/null; then
            curl -Lso tfsec https://github.com/tfsec/tfsec/releases/latest/download/tfsec-linux-amd64
            chmod +x tfsec
            mv tfsec /usr/local/bin/
          fi
          if ! command -v checkov &> /dev/null; then
            curl -sL https://raw.githubusercontent.com/bridgecrewio/checkov/master/install.sh | bash -
          fi

      # Execute tfsec scan
      - name: Run tfsec scan
        run: tfsec

      # Execute checkov scan
      - name: Run checkov scan
        run: checkov --sarif

      # Upload SARIF to GHAS
      - name: Upload SARIF to GHAS
        run: |
          sarif_file=$(find . -name "*.sarif")
          if [ -f "$sarif_file" ]; then
            echo "Uploading SARIF file to GHAS..."
            # Add command here to upload the SARIF file to GHAS
          else
            echo "No SARIF file found. Skipping upload."
          fi
