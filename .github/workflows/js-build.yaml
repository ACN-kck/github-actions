name: build
on:
  push:
    paths-ignore:
      - 'docs/**'
  pull_request:
    types:
      - opened
      - reopened
      - synchronize
  workflow_dispatch:
    
jobs:
  JS-build:
    runs-on: ubuntu-latest
   
    steps:
      # Check Out Code.
      - uses: actions/checkout@v3
      
      # Use Node Version 18.x
      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18.x'
      
      # Caching npm modules.
      - name: Cache node modules
        id: cache-npm
        uses: actions/cache@v3
        env:
          cache-name: cache-node-modules
        with:
          # npm cache files are stored in `~/.npm` on Linux/macOS
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - name: compiled
        run: npm install

      - name: npm clean install
        run: npm ci 

      - name: Test
        run: npm test
        
      - name: Build
        run: npm run build --if-present 

  CodeQL-Build:
    # CodeQL runs on ubuntu-latest, windows-latest, and macos-latest
    runs-on: ubuntu-latest

    permissions:
      # required for all workflows
      security-events: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      # Initializes the CodeQL tools for scanning.
      - name: Initialize CodeQL
        uses: github/codeql-action/init@v2
        # Override language selection by uncommenting this and choosing your languages
        # with:
        #   languages: go, javascript, csharp, python, cpp, java, ruby

      # Autobuild attempts to build any compiled languages (C/C++, C#, Go, or Java).
      # If this step fails, then you should remove it and run the build manually (see below).
      # - name: Autobuild
      #   uses: github/codeql-action/autobuild@v2

      # ‚ÑπÔ∏è Command-line programs to run using the OS shell.
      # üìö See https://docs.github.com/en/actions/using-workflows/workflow-syntax-for-github-actions#jobsjob_idstepsrun

      # ‚úèÔ∏è If the Autobuild fails above, remove it and uncomment the following
      #    three lines and modify them (or add more) to build your code if your
      #    project uses a compiled language

      #- run: |
      #     make bootstrap
      #     make release

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v2  

  Trivy-Scans: 
    runs-on: ubuntu-latest
    steps:      
      - name: Build Image
        run: docker build -t '${{ github.repository }}:${{ github.sha }}' -f ./Dockerfile .
        # Location might not be fixed - TODO: turn to env var

      - name: Show Images
        run: docker images ls

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: '${{ github.repository }}:${{ github.sha }}' # Includes owner, string manipulation via shell possible
          exit-code: "1"
          hide-progress: false
          format: "sarif"
          output: 'trivy-results-${{ github.repository }}.sarif'
          severity: "CRITICAL,HIGH"
          
      - name: Upload Trivy scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v2
        if: always()
        with:
          sarif_file: 'trivy-results-${{ github.repository }}.sarif'  
